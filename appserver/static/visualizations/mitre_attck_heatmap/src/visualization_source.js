"use strict";/*
 * Visualization source
 */define(["jquery","underscore","api/SplunkVisualizationBase","api/SplunkVisualizationUtils","enterpriseAttack"// Add required assets to this list
],function($,_,SplunkVisualizationBase,vizUtils,enterpriseAttack){// Extend from SplunkVisualizationBase
return SplunkVisualizationBase.extend({initialize:function initialize(){SplunkVisualizationBase.prototype.initialize.apply(this,arguments);this.$el=$(this.el);this.$el.addClass("mitre-container");this.colorMap=[{pct:0,color:{r:99,g:190,b:123}},{pct:50,color:{r:255,g:213,b:132}},{pct:100,color:{r:248,g:105,b:107}}]},// Optionally implement to format data returned from search. 
// The returned object will be passed to updateView as 'data'
formatData:function formatData(data){if(data.rows.length<1){return false}if(data.rows[0].length<2){throw new SplunkVisualizationBase.VisualizationError("Search results must have at least 2 fields: id, count")}return data},// Implement updateView to render a visualization.
//  'data' will be the data object returned from formatData or from the search
//  'config' will be the configuration property object
updateView:function updateView(data,config){if(!data)return;this.$el.empty();var self=this;var colorMap=this.colorMap;var startColor=config[this.getPropertyNamespaceInfo().propertyNamespace+"startColor"]||"#53a051";var midColor=config[this.getPropertyNamespaceInfo().propertyNamespace+"midColor"]||"#f8be34";var endColor=config[this.getPropertyNamespaceInfo().propertyNamespace+"endColor"]||"#dc4e41";var startVal=config[this.getPropertyNamespaceInfo().propertyNamespace+"startVal"]||0;var endVal=config[this.getPropertyNamespaceInfo().propertyNamespace+"endVal"]||100;var display=config[this.getPropertyNamespaceInfo().propertyNamespace+"display"]||"id";colorMap[0].color=this._hexToRgb(startColor);colorMap[1].color=this._hexToRgb(midColor);colorMap[2].color=this._hexToRgb(endColor);var legendTitle=vizUtils.escapeHtml(config[this.getPropertyNamespaceInfo().propertyNamespace+"legendTitle"]);var sortKey=config[this.getPropertyNamespaceInfo().propertyNamespace+"sortKey"]||"data-id";var sortOrder=config[this.getPropertyNamespaceInfo().propertyNamespace+"sortOrder"]||"asc";var $content=$("<div class=\"mtr-viz-container\"></div>");$colorMeter=$("\n            <div class=\"mtr-legend\">\n                <div class=\"mtr-legend-title\">"+legendTitle+"</div>\n                <div class=\"mtr-legend-meter\"></div>\n                <div class=\"mtr-legend-val\">\n                    <span>"+startVal+"</span>\n                    <span>"+(endVal-startVal)/2+"</span>\n                    <span>"+endVal+"</span>\n                </div>\n            </div>\n        ");var gradient="(45deg, "+startColor+" 0%, "+midColor+" 50%, "+endColor+" 100%)";$colorMeter.find(".mtr-legend-meter").css("background","-moz-linear-gradient"+gradient).css("background","-webkit-linear-gradient"+gradient).css("background","linear-gradient"+gradient);enterpriseAttack.tactics.forEach(function(tactic){$tactic_col=$("<div class=\"mtr-tactic-col\" data-tactic=\"".concat(tactic.short_name,"\">"));$tactic_col.appendTo($content).append("\n                    <div class=\"mtr-tactic\">\n                        <div class=\"mtr-tactic-title\">".concat(tactic.name,"</div>\n                        <div class=\"mtr-meter-container\">\n                            <div class=\"mtr-meter-fill\">\n                                <div class=\"mtr-stats-container\">\n                                    <div class=\"mtr-total mtr-stat\">\n                                        <div class=\"mtr-stats-label\">Total</div>\n                                        <div class=\"mtr-stats-val\"></div>\n                                    </div>\n                                    <div class=\"mtr-count mtr-stat\">\n                                        <div class=\"mtr-stats-label\">Unique Techniques</div>\n                                        <div class=\"mtr-stats-val\"></div>\n                                    </div>\n                                    <div class=\"mtr-mean mtr-stat\">\n                                        <div class=\"mtr-stats-label\">Average per Technique</div>\n                                        <div class=\"mtr-stats-val\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"mtr-technique-col\"></div>\n            "))});enterpriseAttack.techniques.forEach(function(technique){var title=display=="id"?technique.id:technique.name;var $technique=$("\n                <div class=\"mtr-technique mtr-display-".concat(display,"\" data-id=\"").concat(technique.id,"\" data-name=\"").concat(technique.name,"\" data-value=\"\" data-percent=\"\" data-desc=\"\">").concat(title,"</div>\n            "));technique.tactics.forEach(function(tactic){$technique.clone().prependTo($(".mtr-tactic-col[data-tactic=\"".concat(tactic,"\"] .mtr-technique-col"),$content))});$technique.click(function(e){self._drilldown(id,e)})});data.rows.forEach(function(r){var id=vizUtils.escapeHtml(r[0]);var count=vizUtils.escapeHtml(r[1]);var $technique=$(".mtr-technique[data-id=\"".concat(id,"\"]"),$content);if(!$technique||count==""||count==null||isNaN(count))return;var percent=self._getPercent(startVal,endVal,count);var color=self._getColor(percent);var description=vizUtils.escapeHtml(r[2])||"";if(percent<2)percent=2;$technique.attr("data-value",count);$technique.attr("data-percent",percent);$technique.attr("data-desc",description);$technique.css("background",color.background).css("color",color.foreground)});$(".mtr-technique",$content).hover(function(){var id=$(this).attr("data-id");var name=$(this).attr("data-name");var percent=parseInt($(this).attr("data-percent"));var description=$(this).attr("data-desc");var value=parseInt($(this).attr("data-value"))||"";var color=self._getColor(percent);if(percent<2)percent=2;var $tooltip=$("\n                <div class=\"mtr-technique-tooltip\">\n                    <div class=\"mtr-id\">".concat(id,"</div>\n                    <div class=\"mtr-name\">").concat(name,"</div>\n                    <div class=\"mtr-meter-container\">\n                        <div class=\"mtr-meter-fill\"></div>\n                    </div>\n                    <div class=\"mtr-label\"></div>\n                    <div class=\"mtr-val\">").concat(value,"</div>\n                    <div class=\"mtr-desc\"></div>\n                </div>\n            "));var offset=$(this).offset();if(offset.left>$(window).width()-400){offset.left-=355;$tooltip.addClass("mtr-technique-tooltip-left")}else{offset.left+=$(this).outerWidth()+25;$tooltip.addClass("mtr-technique-tooltip-right")}$tooltip.offset(offset);$tooltip.append("<p>"+description.split("\\n").join("</p><p>")+"</p>");$tooltip.appendTo(document.body);$tooltip[0].offsetWidth=$tooltip[0].offsetWidth;$tooltip.addClass("show");if(value){$(".mtr-label",$tooltip).text(data.fields[1].name);$(".mtr-meter-fill",$tooltip).css("background",color.background).css("width",$(this).attr("data-percent")+"%");if(color.luminance<0.1){$(".mtr-meter-container",$tooltip).addClass("dark")}}},function(){$(".mtr-technique-tooltip").remove()});$(".mtr-tactic-col",$content).each(function(){var sum=0;var count=0;var total=0;$(".mtr-technique",this).each(function(){total+=1;var val=$(this).attr("data-value");if(val&&!isNaN(val)){sum+=+val;count+=1}});var mean=Math.round(sum/count);var coverage=Math.round(count/total*100);if(!mean)mean=0;if(!coverage)coverage=0;var percent=self._getPercent(startVal,endVal,mean);var color=self._getColor(percent);if(percent<2)percent=2;$(".mtr-tactic .mtr-meter-fill",this).css("background",color.background).css("color",color.foreground).css("width",percent+"%");$(".mtr-tactic .mtr-stat",this).css("background",color.background).css("color",color.foreground).css("border-color",color.foreground);$(".mtr-tactic .mtr-total .mtr-stats-val",this).text(sum.toLocaleString());$(".mtr-tactic .mtr-count .mtr-stats-val",this).text(count.toLocaleString()+" (".concat(coverage,"%)"));$(".mtr-tactic .mtr-mean .mtr-stats-val",this).text(mean.toLocaleString())});$(".mtr-technique-col",$content).each(function(){self._sortElements($(this),sortKey,sortOrder);$(this).append("\n                <div class=\"mtr-technique mtr-placeholder mtr-display-".concat(display,"\">\n                    <div class=\"mtr-technique-title\">T0000</div>\n                </div>\n                <div class=\"mtr-technique mtr-placeholder mtr-display-").concat(display,"\">\n                    <div class=\"mtr-technique-title\">T0000</div>\n                </div>\n            "))});$content.appendTo(this.$el);$colorMeter.appendTo(this.$el)},// Search data params
getInitialDataParams:function getInitialDataParams(){return{outputMode:SplunkVisualizationBase.ROW_MAJOR_OUTPUT_MODE}},// Override to respond to re-sizing events
reflow:function reflow(){},_getPercent:function _getPercent(lowerBound,upperBound,value){var percent=Math.round(100*(value-lowerBound)/(upperBound-lowerBound));if(percent>100)percent=100;if(percent<0)percent=0;return percent},_hexToRgb:function _hexToRgb(h){var r=0,g=0,b=0;// 3 digits
if(h.length==4){r="0x"+h[1]+h[1];g="0x"+h[2]+h[2];b="0x"+h[3]+h[3];// 6 digits
}else if(h.length==7){r="0x"+h[1]+h[2];g="0x"+h[3]+h[4];b="0x"+h[5]+h[6]}return{r:r,g:g,b:b}},_getColor:function _getColor(percent){for(var i=1;i<this.colorMap.length-1;i++){if(percent<this.colorMap[i].pct){break}}var lower=this.colorMap[i-1];var upper=this.colorMap[i];var range=upper.pct-lower.pct;var rangePct=(percent-lower.pct)/range;var pctLower=1-rangePct;var pctUpper=rangePct;var color={r:Math.floor(lower.color.r*pctLower+upper.color.r*pctUpper),g:Math.floor(lower.color.g*pctLower+upper.color.g*pctUpper),b:Math.floor(lower.color.b*pctLower+upper.color.b*pctUpper)};var luminance=(0.299*color.r+0.587*color.g+0.114*color.b)/255;var foreground=luminance>0.65?"rgb(0,0,0)":"rgb(255,255,255)";return{background:"rgb("+[color.r,color.g,color.b].join(",")+")",luminance:luminance,foreground:foreground}},_sortElements:function _sortElements($container,key,order){var flip=order=="asc"?1:-1;$children=$container.children().sort(function(a,b){if(key=="data-id"||key=="data-name"){return flip*($(a).attr(key)<$(b).attr(key)?-1:1)}if(key=="data-value"){aVal=parseInt($(a).attr(key));bVal=parseInt($(b).attr(key));if(!aVal)aVal=-1;if(!bVal)bVal=-1;return flip*(aVal<bVal?-1:1)}return 0});$container.append($children)},_drilldown:function _drilldown(id,e){this.drilldown({action:SplunkVisualizationBase.FIELD_VALUE_DRILLDOWN,data:{"id":id}},e)}})});